-- Criação do banco de dados para o cénario de E-commerce
-- drop database ecommerce;
create database ecommerce;
use ecommerce;

-- criar tabela cliente

create table clients(
	idclient int auto_increment primary key,
    Fname varchar(50),
    Mint char(3),
    Cpf char(11) not null,
    Address varchar(30),
    typeClient enum("PJ", "PF") ,
    constraint unique_cpf_client unique (Cpf)
);

-- desc clients;
-- criar tabela produto

-- size = dimensão do produto
create table product(
	idProduct int auto_increment primary key,
    Fname varchar(50),
    classification_kids bool default false,
    category enum('Eletronico', 'Vestimenta', 'Alimentos', 'Brinquedos') not null,
    Avaliação float default 0,
    size varchar(10)
    
);


create table payments(
	idclient int,
    idPayment int,
    typePayment enum('Boleto', 'Crédito','Dois Cartôes', 'Débito'),
    limitAvailable float,
    primary key(idClient, idPayment)

);
-- criar tabela pedido

create table orders(
	idOrder int auto_increment primary key,
    idOrderClient int not null,
    orderStatus enum('Cancelado', 'Confirmado', 'Em processamento') default 'Em processamento',
    orderDescription varchar(255),
    sendValue float default 10,
    paymentCash bool default false,
    constraint fk_orders_cliente foreign key(idOrderClient) references clients(idClient)
);



-- Ordens do produto

create table productOrder(
	idPOproduct int,
    idPOorder int,
    poQuantity int default 1,
    poStatus enum('Disponivel', 'Sem estoque') default  'Disponivel',
    primary key (idPOproduct, idPOorder),
    constraint fk_product_seller_POorders foreign key (idPOproduct) references product(idProduct),
    constraint fk_product_product_POorders foreign key (idPOorder) references orders(idOrder)

);

-- Tabela Estoque

create table productStorage(
	idProductStorage int auto_increment primary key,
    storageLocation varchar(50),
    quantity int default 0
);


-- Tabela Fornecedor
create table supplier(
	idsupplier int auto_increment primary key,
    SocialName varchar(255) not null,
    CNPJ char(15) not null,
    contact varchar(13) not null,
    constraint unique_supplier unique (CNPJ)
);



-- Tabela Vendedor
create table seller(
	idseller int auto_increment primary key,
    SocialName varchar(255) not null,
    CNPJ char(15) not null,
    CPF CHAR(9),
    location varchar(80),
    contact varchar(13) not null,
    constraint unique_seller_cpf unique (CPF),
    constraint unique_seller_cnpj unique (CNPJ)
    
);


-- Produto vendedor
Create table productSeller(
	idPseller int,
	idProduct int,
	prod_quantity int default 1,
    primary key (idPseller, idProduct),
    constraint fk_product_seller foreign key (idPseller) references seller(idSeller),
    constraint fk_product_product foreign key (idProduct) references product(idProduct)
);

desc productSeller;
-- Locação do stoque

create table storageLocation(
	idLproduct int,
    idLstorage int,
    location varchar(255) not null,
    primary key (idLproduct, idLstorage),
    constraint fk_storage_location_product foreign key (idLproduct) references product(idProduct),
    constraint fk_storage_location_storage foreign key (idLstorage) references productStorage(idProductStorage)
);

-- show tables;
-- show databases;

-- use information_schema;

-- show tables;
-- desc referential_constraints;

select * from referential_constraints where constraint_schema = 'ecommerce';


